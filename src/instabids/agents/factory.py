"""Factory functions for creating agent instances."""from typing import Optionalfrom instabids.agents.homeowner_agent import HomeownerAgentfrom memory.persistent_memory import PersistentMemory# Singleton instance for efficient reuse_homeowner_agent = Nonedef get_homeowner_agent(memory: Optional[PersistentMemory] = None) -> HomeownerAgent:    """    Get a HomeownerAgent instance, reusing the singleton if available.    Args:        memory: Optional memory to initialize with        Returns:        HomeownerAgent instance    """    global _homeowner_agent        if _homeowner_agent is None:        _homeowner_agent = HomeownerAgent(memory=memory)            return _homeowner_agent