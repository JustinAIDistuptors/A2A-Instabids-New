name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    # Use GitHub secrets for Supabase credentials
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      # Still use a dummy value for DB_URL since we don't have direct DB access in CI
      SUPABASE_DB_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # Install dependencies explicitly
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e ".[dev]"
      
      # Set PYTHONPATH to include the src directory
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd):$(pwd)/src" >> $GITHUB_ENV
      
      # Fix common syntax issues
      - name: Fix common syntax issues
        run: python scripts/fix_syntax.py
      
      # Commit syntax fixes if any
      - name: Commit syntax fixes if any
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-fix syntax issues" -a
        continue-on-error: true
      
      # Run unit tests
      - name: Run unit tests
        run: pytest -xvs tests/unit
      
      # Run integration tests
      - name: Integration tests
        run: pytest -xvs -m integration
        env:
          SUPABASE_URL: http://localhost:5432
          SUPABASE_ANON_KEY: dummy
      
      # Run WebSocket & RLS tests
      - name: WebSocket & RLS tests
        run: pytest -xvs tests/integration/test_rls_and_ws.py
        env:
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          SUPABASE_URL: http://localhost:54321
          SUPABASE_ANON_KEY: local

  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Wait for PostgreSQL to be ready
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          for i in {1..15}; do
            pg_isready -U postgres -d postgres -h localhost -p 5432 && echo "PostgreSQL is ready" && break
            echo "Waiting for PostgreSQL... Attempt $i/15"
            sleep 5
            if [ $i -eq 15 ]; then
              echo "PostgreSQL failed to start after multiple attempts" && exit 1
            fi
          done
      - name: Create fixtures directory
        run: mkdir -p cypress/fixtures
      - name: Create sample image for testing
        run: |
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8z8BQDwAEhQGAhKmMIQAAAABJRU5ErkJggg==" | base64 -d > cypress/fixtures/roof.jpg
      - name: Run Cypress tests
        run: pnpm exec cypress run
        env:
          SUPABASE_URL: http://localhost:5432